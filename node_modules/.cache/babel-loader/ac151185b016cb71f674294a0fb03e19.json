{"ast":null,"code":"import { getCoordsDataType } from './shader_compiler';\nexport var CumOpType;\n\n(function (CumOpType) {\n  CumOpType[\"Prod\"] = \"*\";\n  CumOpType[\"Sum\"] = \"+\";\n})(CumOpType || (CumOpType = {}));\n\nexport class CumProgram {\n  constructor(op, outputShape, exclusive, reverse) {\n    this.op = op;\n    this.outputShape = outputShape;\n    this.variableNames = ['x'];\n    this.customUniforms = [{\n      name: 'index',\n      type: 'float'\n    }];\n    const rank = this.outputShape.length;\n    const initVal = this.op === CumOpType.Prod ? '1.0' : '0.0';\n    const val = exclusive ? initVal : `getX(${getCoords(rank, 'coords', this.op)})`;\n    const length = this.outputShape[this.outputShape.length - 1];\n    let condition = '';\n    let idxString = ''; // When exclusive is set, the cum op becomes roll op that copies the\n    // value from the previous index based on the direction specified by the\n    // reverse flag.\n\n    if (exclusive) {\n      condition = reverse ? `end != ${length - 1}` : 'end != 0';\n      idxString = reverse ? 'end + 1' : 'end - 1';\n    } else {\n      condition = reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n      idxString = reverse ? 'end + pow2' : 'end - pow2';\n    }\n\n    this.userCode = `\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords', this.op)};\n        float val = ${val};\n        int pow2 = int(pow(2.0, index));\n        if (${condition}) {\n          int idx = ${idxString};\n          ${getFinalCoord(rank, 'coords', this.op)} = idx;\n          val ${this.op}= getX(${getCoords(rank, 'coords', this.op)});\n        }\n        setOutput(val);\n      }\n    `;\n  }\n\n}\n\nfunction getCoords(rank, name, op) {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.x, ${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.x, ${name}.y, ${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n  } else {\n    throw new Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n  }\n}\n\nfunction getFinalCoord(rank, name, op) {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.w`;\n  } else {\n    throw new Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n  }\n}","map":{"version":3,"sources":["../../../../../tfjs-backend-webgl/src/cum_gpu.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport {GPGPUProgram} from './gpgpu_math';\nimport {getCoordsDataType, UniformType} from './shader_compiler';\n\nexport enum CumOpType {\n  Prod = '*',\n  Sum = '+',\n}\n\nexport class CumProgram implements GPGPUProgram {\n  variableNames = ['x'];\n  userCode: string;\n  customUniforms = [{name: 'index', type: 'float' as UniformType}];\n\n  constructor(\n      public op: CumOpType, public outputShape: number[], exclusive: boolean,\n      reverse: boolean) {\n    const rank = this.outputShape.length;\n    const initVal = this.op === CumOpType.Prod ? '1.0' : '0.0';\n    const val =\n        exclusive ? initVal : `getX(${getCoords(rank, 'coords', this.op)})`;\n    const length = this.outputShape[this.outputShape.length - 1];\n    let condition = '';\n    let idxString = '';\n    // When exclusive is set, the cum op becomes roll op that copies the\n    // value from the previous index based on the direction specified by the\n    // reverse flag.\n    if (exclusive) {\n      condition = reverse ? `end != ${length - 1}` : 'end != 0';\n      idxString = reverse ? 'end + 1' : 'end - 1';\n    } else {\n      condition = reverse ? `end + pow2 < ${length}` : 'end >= pow2';\n      idxString = (reverse ? 'end + pow2' : 'end - pow2');\n    }\n\n    this.userCode = `\n      void main() {\n        ${getCoordsDataType(rank)} coords = getOutputCoords();\n        int end = ${getFinalCoord(rank, 'coords', this.op)};\n        float val = ${val};\n        int pow2 = int(pow(2.0, index));\n        if (${condition}) {\n          int idx = ${idxString};\n          ${getFinalCoord(rank, 'coords', this.op)} = idx;\n          val ${this.op}= getX(${getCoords(rank, 'coords', this.op)});\n        }\n        setOutput(val);\n      }\n    `;\n  }\n}\n\nfunction getCoords(rank: number, name: string, op: CumOpType): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.x, ${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.x, ${name}.y, ${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.x, ${name}.y, ${name}.z, ${name}.w`;\n  } else {\n    throw new Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n  }\n}\n\nfunction getFinalCoord(rank: number, name: string, op: CumOpType): string {\n  if (rank === 1) {\n    return `${name}`;\n  } else if (rank === 2) {\n    return `${name}.y`;\n  } else if (rank === 3) {\n    return `${name}.z`;\n  } else if (rank === 4) {\n    return `${name}.w`;\n  } else {\n    throw new Error(`Cumulative ${op} for rank ${rank} is not yet supported`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}