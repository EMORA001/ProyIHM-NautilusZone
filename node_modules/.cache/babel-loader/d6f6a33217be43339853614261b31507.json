{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'ResizeBilinear',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'align_corners',\n    'name': 'alignCorners',\n    'type': 'bool'\n  }, {\n    'tfName': 'half_pixel_centers',\n    'name': 'halfPixelCenters',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'ResizeNearestNeighbor',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'align_corners',\n    'name': 'alignCorners',\n    'type': 'bool'\n  }, {\n    'tfName': 'half_pixel_centers',\n    'name': 'halfPixelCenters',\n    'type': 'bool'\n  }, {\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'CropAndResize',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'image',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'boxes',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'boxInd',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'cropSize',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'method',\n    'name': 'method',\n    'type': 'string'\n  }, {\n    'tfName': 'extrapolation_value',\n    'name': 'extrapolationValue',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'ImageProjectiveTransformV3',\n  'category': 'image',\n  'inputs': [{\n    'start': 0,\n    'name': 'images',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'transforms',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'fillValue',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'interpolation',\n    'name': 'interpolation',\n    'type': 'string'\n  }, {\n    'tfName': 'fill_mode',\n    'name': 'fillMode',\n    'type': 'string'\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/image.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAIH,OAAO,MAAM,IAAI,GAAe,CAC9B;EACE,YAAY,gBADd;EAEE,YAAY,OAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,QAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,MAFV;IAGE,QAAQ;EAHV,CANQ,CAHZ;EAeE,SAAS,CACP;IACE,UAAU,eADZ;IAEE,QAAQ,cAFV;IAGE,QAAQ;EAHV,CADO,EAMP;IACE,UAAU,oBADZ;IAEE,QAAQ,kBAFV;IAGE,QAAQ;EAHV,CANO,EAWP;IACE,UAAU,GADZ;IAEE,QAAQ,OAFV;IAGE,QAAQ,OAHV;IAIE,gBAAgB;EAJlB,CAXO;AAfX,CAD8B,EAmC9B;EACE,YAAY,uBADd;EAEE,YAAY,OAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,QAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,MAFV;IAGE,QAAQ;EAHV,CANQ,CAHZ;EAeE,SAAS,CACP;IACE,UAAU,eADZ;IAEE,QAAQ,cAFV;IAGE,QAAQ;EAHV,CADO,EAMP;IACE,UAAU,oBADZ;IAEE,QAAQ,kBAFV;IAGE,QAAQ;EAHV,CANO,EAWP;IACE,UAAU,GADZ;IAEE,QAAQ,OAFV;IAGE,QAAQ,OAHV;IAIE,gBAAgB;EAJlB,CAXO;AAfX,CAnC8B,EAqE9B;EACE,YAAY,eADd;EAEE,YAAY,OAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,OAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,OAFV;IAGE,QAAQ;EAHV,CANQ,EAWR;IACE,SAAS,CADX;IAEE,QAAQ,QAFV;IAGE,QAAQ;EAHV,CAXQ,EAgBR;IACE,SAAS,CADX;IAEE,QAAQ,UAFV;IAGE,QAAQ;EAHV,CAhBQ,CAHZ;EAyBE,SAAS,CACP;IACE,UAAU,QADZ;IAEE,QAAQ,QAFV;IAGE,QAAQ;EAHV,CADO,EAMP;IACE,UAAU,qBADZ;IAEE,QAAQ,oBAFV;IAGE,QAAQ;EAHV,CANO;AAzBX,CArE8B,EA2G9B;EACE,YAAY,4BADd;EAEE,YAAY,OAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,QAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,YAFV;IAGE,QAAQ;EAHV,CANQ,EAWR;IACE,SAAS,CADX;IAEE,QAAQ,aAFV;IAGE,QAAQ;EAHV,CAXQ,EAgBR;IACE,SAAS,CADX;IAEE,QAAQ,WAFV;IAGE,QAAQ;EAHV,CAhBQ,CAHZ;EAyBE,SAAS,CACP;IACE,UAAU,eADZ;IAEE,QAAQ,eAFV;IAGE,QAAQ;EAHV,CADO,EAMP;IACE,UAAU,WADZ;IAEE,QAAQ,UAFV;IAGE,QAAQ;EAHV,CANO;AAzBX,CA3G8B,CAAzB","sourcesContent":["\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'ResizeBilinear',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ResizeNearestNeighbor',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'align_corners',\n        'name': 'alignCorners',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'half_pixel_centers',\n        'name': 'halfPixelCenters',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'CropAndResize',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'image',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'boxes',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'boxInd',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'cropSize',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'method',\n        'name': 'method',\n        'type': 'string'\n      },\n      {\n        'tfName': 'extrapolation_value',\n        'name': 'extrapolationValue',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ImageProjectiveTransformV3',\n    'category': 'image',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'images',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'transforms',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'outputShape',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'fillValue',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'interpolation',\n        'name': 'interpolation',\n        'type': 'string'\n      },\n      {\n        'tfName': 'fill_mode',\n        'name': 'fillMode',\n        'type': 'string'\n      }\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}