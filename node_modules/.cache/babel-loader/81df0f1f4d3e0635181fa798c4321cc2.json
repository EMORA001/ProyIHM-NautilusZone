{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { SearchSorted } from '@tensorflow/tfjs-core';\nimport { searchSortedImpl } from './SearchSorted_impl';\nexport function searchSorted(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    sortedSequence,\n    values\n  } = inputs;\n  const {\n    side\n  } = attrs;\n  const $sortedSequence = backend.data.get(sortedSequence.dataId).values;\n  const $values = backend.data.get(values.dataId).values;\n  const output = searchSortedImpl($sortedSequence, $values, sortedSequence.shape[0], sortedSequence.shape[1], values.shape[1], side);\n  return backend.makeTensorInfo(values.shape, 'int32', output);\n}\nexport const searchSortedConfig = {\n  kernelName: SearchSorted,\n  backendName: 'cpu',\n  kernelFunc: searchSorted\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-cpu/src/kernels/SearchSorted.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,YAAlC,QAAoH,uBAApH;AAIA,SAAQ,gBAAR,QAA+B,qBAA/B;AAEA,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAIL;EACC,MAAM;IAAC,MAAD;IAAS,OAAT;IAAkB;EAAlB,IAA2B,IAAjC;EACA,MAAM;IAAC,cAAD;IAAiB;EAAjB,IAA2B,MAAjC;EACA,MAAM;IAAC;EAAD,IAAS,KAAf;EAEA,MAAM,eAAe,GACjB,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,cAAc,CAAC,MAAhC,EAAwC,MAD5C;EAEA,MAAM,OAAO,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,MAAM,CAAC,MAAxB,EAAgC,MAAhD;EAEA,MAAM,MAAM,GAAG,gBAAgB,CAC3B,eAD2B,EACV,OADU,EACD,cAAc,CAAC,KAAf,CAAqB,CAArB,CADC,EAE3B,cAAc,CAAC,KAAf,CAAqB,CAArB,CAF2B,EAEF,MAAM,CAAC,KAAP,CAAa,CAAb,CAFE,EAEe,IAFf,CAA/B;EAGA,OAAO,OAAO,CAAC,cAAR,CAAuB,MAAM,CAAC,KAA9B,EAAqC,OAArC,EAA8C,MAA9C,CAAP;AACD;AAED,OAAO,MAAM,kBAAkB,GAAiB;EAC9C,UAAU,EAAE,YADkC;EAE9C,WAAW,EAAE,KAFiC;EAG9C,UAAU,EAAE;AAHkC,CAAzC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, SearchSorted, SearchSortedAttrs, SearchSortedInputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\n\nimport {MathBackendCPU} from '../backend_cpu';\n\nimport {searchSortedImpl} from './SearchSorted_impl';\n\nexport function searchSorted(args: {\n  inputs: SearchSortedInputs,\n  backend: MathBackendCPU,\n  attrs: SearchSortedAttrs\n}): TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {sortedSequence, values} = inputs;\n  const {side} = attrs;\n\n  const $sortedSequence =\n      backend.data.get(sortedSequence.dataId).values as TypedArray;\n  const $values = backend.data.get(values.dataId).values as TypedArray;\n\n  const output = searchSortedImpl(\n      $sortedSequence, $values, sortedSequence.shape[0],\n      sortedSequence.shape[1], values.shape[1], side);\n  return backend.makeTensorInfo(values.shape, 'int32', output);\n}\n\nexport const searchSortedConfig: KernelConfig = {\n  kernelName: SearchSorted,\n  backendName: 'cpu',\n  kernelFunc: searchSorted as {} as KernelFunc,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}