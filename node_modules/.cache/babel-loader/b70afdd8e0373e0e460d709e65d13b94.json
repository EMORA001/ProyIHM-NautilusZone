{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'EmptyTensorList',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 1,\n    'name': 'maxNumElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'LoopCond',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Switch',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'pred',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Merge',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }]\n}, {\n  'tfOpName': 'Enter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'frame_name',\n    'name': 'frameName',\n    'type': 'string'\n  }, {\n    'tfName': 'is_constant',\n    'name': 'isConstant',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Exit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'NextIteration',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'size',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'dynamic_size',\n    'name': 'dynamicSize',\n    'type': 'bool'\n  }, {\n    'tfName': 'clear_after_read',\n    'name': 'clearAfterRead',\n    'type': 'bool'\n  }, {\n    'tfName': 'identical_element_shapes',\n    'name': 'identicalElementShapes',\n    'type': 'bool'\n  }, {\n    'tfName': 'tensor_array_name',\n    'name': 'name',\n    'type': 'string'\n  }]\n}, {\n  'tfOpName': 'TensorArrayWriteV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayReadV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArrayGatherV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }]\n}, {\n  'tfOpName': 'TensorArrayScatterV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArrayConcatV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }, {\n    'tfName': 'element_shape_except0',\n    'name': 'elementShapeExcept0',\n    'type': 'shape',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'TensorArraySplitV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'flowIn',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'T',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorArraySizeV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'flowIn',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'TensorArrayCloseV3',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorArrayId',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'StatelessIf',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'If',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'cond',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'then_branch',\n    'name': 'thenBranch',\n    'type': 'func'\n  }, {\n    'tfName': 'else_branch',\n    'name': 'elseBranch',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'StatelessWhile',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'While',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'args',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'cond',\n    'name': 'cond',\n    'type': 'func'\n  }, {\n    'tfName': 'body',\n    'name': 'body',\n    'type': 'func'\n  }]\n}, {\n  'tfOpName': 'TensorListScatter',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListScatterV2',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 3,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGather',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListGetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSetItem',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'index',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListReserve',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 1,\n    'name': 'numElements',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListFromTensor',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListStack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }, {\n    'tfName': 'num_elements',\n    'name': 'numElements',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListSplit',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'start': 2,\n    'name': 'lengths',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListConcat',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListConcatV2',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_shape',\n    'name': 'elementShape',\n    'type': 'shape'\n  }, {\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPopBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'elementShape',\n    'type': 'shape'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListPushBack',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'element_dtype',\n    'name': 'elementDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'TensorListLength',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'TensorListResize',\n  'category': 'control',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensorListId',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number'\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/control.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'EmptyTensorList',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 1,\n        'name': 'maxNumElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LoopCond',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'pred',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Switch',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'pred',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Merge',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'tensors',\n        'type': 'tensors'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Enter',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'frame_name',\n        'name': 'frameName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'is_constant',\n        'name': 'isConstant',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Exit',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'NextIteration',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'size',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'dynamic_size',\n        'name': 'dynamicSize',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'clear_after_read',\n        'name': 'clearAfterRead',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'identical_element_shapes',\n        'name': 'identicalElementShapes',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'tensor_array_name',\n        'name': 'name',\n        'type': 'string'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayWriteV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayReadV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayGatherV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayScatterV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayConcatV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'dtype',\n        'name': 'dtype',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'element_shape_except0',\n        'name': 'elementShapeExcept0',\n        'type': 'shape',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySplitV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'lengths',\n        'type': 'number[]'\n      },\n      {\n        'start': 3,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'T',\n        'name': 'dtype',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArraySizeV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'flowIn',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorArrayCloseV3',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorArrayId',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StatelessIf',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'cond',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'then_branch',\n        'name': 'thenBranch',\n        'type': 'func'\n      },\n      {\n        'tfName': 'else_branch',\n        'name': 'elseBranch',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'If',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'cond',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'then_branch',\n        'name': 'thenBranch',\n        'type': 'func'\n      },\n      {\n        'tfName': 'else_branch',\n        'name': 'elseBranch',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'StatelessWhile',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'cond',\n        'name': 'cond',\n        'type': 'func'\n      },\n      {\n        'tfName': 'body',\n        'name': 'body',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'While',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'end': 0,\n        'name': 'args',\n        'type': 'tensors'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'cond',\n        'name': 'cond',\n        'type': 'func'\n      },\n      {\n        'tfName': 'body',\n        'name': 'body',\n        'type': 'func'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatter',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListScatterV2',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 3,\n        'name': 'numElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListGather',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'indices',\n        'type': 'number[]'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListGetItem',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSetItem',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'index',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListReserve',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 1,\n        'name': 'numElements',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListFromTensor',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListStack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'num_elements',\n        'name': 'numElements',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListSplit',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensor',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'start': 2,\n        'name': 'lengths',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListConcat',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListConcatV2',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_shape',\n        'name': 'elementShape',\n        'type': 'shape'\n      },\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPopBack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'elementShape',\n        'type': 'shape'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListPushBack',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'tensor',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'element_dtype',\n        'name': 'elementDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListLength',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'TensorListResize',\n    'category': 'control',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tensorListId',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      }\n    ]\n  }\n]\n;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}