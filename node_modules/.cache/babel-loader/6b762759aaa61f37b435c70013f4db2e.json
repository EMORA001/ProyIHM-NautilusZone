{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Square } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nexport const squareConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: _ref => {\n    let {\n      inputs,\n      backend\n    } = _ref;\n    const {\n      x\n    } = inputs;\n    const cpuBackend = backend;\n    assertNotComplex(x, 'square');\n    const values = cpuBackend.data.get(x.dataId).values;\n    const newValues = new Float32Array(values.length);\n\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n\n    const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {\n      dataId,\n      shape: x.shape,\n      dtype: x.dtype\n    };\n  }\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-cpu/src/kernels/Square.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAmC,uBAAnC;AAGA,SAAQ,gBAAR,QAA+B,aAA/B;AAEA,OAAO,MAAM,YAAY,GAAiB;EACxC,UAAU,EAAE,MAD4B;EAExC,WAAW,EAAE,KAF2B;EAGxC,UAAU,EAAE,QAAsB;IAAA,IAArB;MAAC,MAAD;MAAS;IAAT,CAAqB;IAChC,MAAM;MAAC;IAAD,IAAM,MAAZ;IACA,MAAM,UAAU,GAAG,OAAnB;IACA,gBAAgB,CAAC,CAAD,EAAI,QAAJ,CAAhB;IAEA,MAAM,MAAM,GAAG,UAAU,CAAC,IAAX,CAAgB,GAAhB,CAAoB,CAAC,CAAC,MAAtB,EAA8B,MAA7C;IACA,MAAM,SAAS,GAAG,IAAI,YAAJ,CAAiB,MAAM,CAAC,MAAxB,CAAlB;;IACA,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,EAAE,CAArC,EAAwC;MACtC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;MACA,SAAS,CAAC,CAAD,CAAT,GAAe,KAAK,GAAG,KAAvB;IACD;;IACD,MAAM,MAAM,GAAG,UAAU,CAAC,KAAX,CAAiB,SAAjB,EAA4B,CAAC,CAAC,KAA9B,EAAqC,CAAC,CAAC,KAAvC,CAAf;IACA,OAAO;MAAC,MAAD;MAAS,KAAK,EAAE,CAAC,CAAC,KAAlB;MAAyB,KAAK,EAAE,CAAC,CAAC;IAAlC,CAAP;EACD;AAhBuC,CAAnC","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Square, SquareInputs} from '@tensorflow/tfjs-core';\nimport {KernelConfig} from '@tensorflow/tfjs-core';\nimport {MathBackendCPU} from '../backend_cpu';\nimport {assertNotComplex} from '../cpu_util';\n\nexport const squareConfig: KernelConfig = {\n  kernelName: Square,\n  backendName: 'cpu',\n  kernelFunc: ({inputs, backend}) => {\n    const {x} = inputs as SquareInputs;\n    const cpuBackend = backend as MathBackendCPU;\n    assertNotComplex(x, 'square');\n\n    const values = cpuBackend.data.get(x.dataId).values as Float32Array;\n    const newValues = new Float32Array(values.length);\n    for (let i = 0; i < values.length; ++i) {\n      const value = values[i];\n      newValues[i] = value * value;\n    }\n    const dataId = cpuBackend.write(newValues, x.shape, x.dtype);\n    return {dataId, shape: x.shape, dtype: x.dtype};\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}