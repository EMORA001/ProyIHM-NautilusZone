{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'StringNGrams',\n  'category': 'string',\n  'inputs': [{\n    'start': 0,\n    'name': 'data',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'dataSplits',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'separator',\n    'name': 'separator',\n    'type': 'string'\n  }, {\n    'tfName': 'ngram_widths',\n    'name': 'nGramWidths',\n    'type': 'number[]'\n  }, {\n    'tfName': 'left_pad',\n    'name': 'leftPad',\n    'type': 'string'\n  }, {\n    'tfName': 'right_pad',\n    'name': 'rightPad',\n    'type': 'string'\n  }, {\n    'tfName': 'pad_width',\n    'name': 'padWidth',\n    'type': 'number'\n  }, {\n    'tfName': 'preserve_short_sequences',\n    'name': 'preserveShortSequences',\n    'type': 'bool'\n  }],\n  'outputs': ['ngrams', 'ngrams_splits']\n}, {\n  'tfOpName': 'StringSplit',\n  'category': 'string',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'delimiter',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'skip_empty',\n    'name': 'skipEmpty',\n    'type': 'bool'\n  }],\n  'outputs': ['indices', 'values', 'shape']\n}, {\n  'tfOpName': 'StringToHashBucketFast',\n  'category': 'string',\n  'inputs': [{\n    'start': 0,\n    'name': 'input',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'num_buckets',\n    'name': 'numBuckets',\n    'type': 'number'\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/string.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAIH,OAAO,MAAM,IAAI,GAAe,CAC9B;EACE,YAAY,cADd;EAEE,YAAY,QAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,MAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,YAFV;IAGE,QAAQ;EAHV,CANQ,CAHZ;EAeE,SAAS,CACP;IACE,UAAU,WADZ;IAEE,QAAQ,WAFV;IAGE,QAAQ;EAHV,CADO,EAMP;IACE,UAAU,cADZ;IAEE,QAAQ,aAFV;IAGE,QAAQ;EAHV,CANO,EAWP;IACE,UAAU,UADZ;IAEE,QAAQ,SAFV;IAGE,QAAQ;EAHV,CAXO,EAgBP;IACE,UAAU,WADZ;IAEE,QAAQ,UAFV;IAGE,QAAQ;EAHV,CAhBO,EAqBP;IACE,UAAU,WADZ;IAEE,QAAQ,UAFV;IAGE,QAAQ;EAHV,CArBO,EA0BP;IACE,UAAU,0BADZ;IAEE,QAAQ,wBAFV;IAGE,QAAQ;EAHV,CA1BO,CAfX;EA+CE,WAAW,CACT,QADS,EAET,eAFS;AA/Cb,CAD8B,EAqD9B;EACE,YAAY,aADd;EAEE,YAAY,QAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,OAFV;IAGE,QAAQ;EAHV,CADQ,EAMR;IACE,SAAS,CADX;IAEE,QAAQ,WAFV;IAGE,QAAQ;EAHV,CANQ,CAHZ;EAeE,SAAS,CACP;IACE,UAAU,YADZ;IAEE,QAAQ,WAFV;IAGE,QAAQ;EAHV,CADO,CAfX;EAsBE,WAAW,CACT,SADS,EAET,QAFS,EAGT,OAHS;AAtBb,CArD8B,EAiF9B;EACE,YAAY,wBADd;EAEE,YAAY,QAFd;EAGE,UAAU,CACR;IACE,SAAS,CADX;IAEE,QAAQ,OAFV;IAGE,QAAQ;EAHV,CADQ,CAHZ;EAUE,SAAS,CACP;IACE,UAAU,aADZ;IAEE,QAAQ,YAFV;IAGE,QAAQ;EAHV,CADO;AAVX,CAjF8B,CAAzB","sourcesContent":["\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'StringNGrams',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'data',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'dataSplits',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'separator',\n        'name': 'separator',\n        'type': 'string'\n      },\n      {\n        'tfName': 'ngram_widths',\n        'name': 'nGramWidths',\n        'type': 'number[]'\n      },\n      {\n        'tfName': 'left_pad',\n        'name': 'leftPad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'right_pad',\n        'name': 'rightPad',\n        'type': 'string'\n      },\n      {\n        'tfName': 'pad_width',\n        'name': 'padWidth',\n        'type': 'number'\n      },\n      {\n        'tfName': 'preserve_short_sequences',\n        'name': 'preserveShortSequences',\n        'type': 'bool'\n      }\n    ],\n    'outputs': [\n      'ngrams',\n      'ngrams_splits'\n    ]\n  },\n  {\n    'tfOpName': 'StringSplit',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'delimiter',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'skip_empty',\n        'name': 'skipEmpty',\n        'type': 'bool'\n      }\n    ],\n    'outputs': [\n      'indices',\n      'values',\n      'shape'\n    ]\n  },\n  {\n    'tfOpName': 'StringToHashBucketFast',\n    'category': 'string',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'input',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'num_buckets',\n        'name': 'numBuckets',\n        'type': 'number'\n      }\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}