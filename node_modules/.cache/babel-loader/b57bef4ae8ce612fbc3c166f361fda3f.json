{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'Bincount',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'weights',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'DenseBincount',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'size',\n    'type': 'number'\n  }, {\n    'start': 2,\n    'name': 'weights',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'binary_output',\n    'name': 'binaryOutput',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Max',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Mean',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Min',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Sum',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'All',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Any',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'ArgMax',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'ArgMin',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number'\n  }]\n}, {\n  'tfOpName': 'Prod',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'keep_dims',\n    'name': 'keepDims',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Cumprod',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'exclusive',\n    'name': 'exclusive',\n    'type': 'bool'\n  }, {\n    'tfName': 'reverse',\n    'name': 'reverse',\n    'type': 'bool'\n  }]\n}, {\n  'tfOpName': 'Cumsum',\n  'category': 'reduction',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'exclusive',\n    'name': 'exclusive',\n    'type': 'bool'\n  }, {\n    'tfName': 'reverse',\n    'name': 'reverse',\n    'type': 'bool'\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/reduction.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'Bincount',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'weights',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'DenseBincount',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'size',\n        'type': 'number'\n      },\n      {\n        'start': 2,\n        'name': 'weights',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'binary_output',\n        'name': 'binaryOutput',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Max',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Mean',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Min',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Sum',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'All',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Any',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ArgMax',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'ArgMin',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Prod',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number[]'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'keep_dims',\n        'name': 'keepDims',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cumprod',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'exclusive',\n        'name': 'exclusive',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'reverse',\n        'name': 'reverse',\n        'type': 'bool'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'Cumsum',\n    'category': 'reduction',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'x',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'axis',\n        'type': 'number'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'exclusive',\n        'name': 'exclusive',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'reverse',\n        'name': 'reverse',\n        'type': 'bool'\n      }\n    ]\n  }\n]\n;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}