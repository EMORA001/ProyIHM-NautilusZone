{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n  const {\n    backend,\n    attrs\n  } = args;\n  const {\n    shape,\n    value\n  } = attrs;\n  let {\n    dtype\n  } = attrs;\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value);\n    const customValues = [[value]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\nexport const fillConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill\n};","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernels/Fill.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAR,EAA+D,IAA/D,QAA0E,uBAA1E;AAGA,SAAQ,WAAR,QAA0B,aAA1B;AAEA,OAAM,SAAU,IAAV,CAAe,IAAf,EAAkE;EAEtE,MAAM;IAAC,OAAD;IAAU;EAAV,IAAmB,IAAzB;EACA,MAAM;IAAC,KAAD;IAAQ;EAAR,IAAiB,KAAvB;EACA,IAAI;IAAC;EAAD,IAAU,KAAd;EAEA,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAAjB;;EAEA,IAAI,KAAK,KAAK,QAAd,EAAwB;IACtB;IACA,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAL,CAAuB,KAAvB,EAA8B,IAAI,CAAC,aAAL,CAAmB,KAAnB,CAA9B,CAAf;IACA,MAAM,CAAC,IAAP,CAAY,KAAZ;IACA,OAAO,OAAO,CAAC,cAAR,CAAuB,KAAvB,EAA8B,KAA9B,EAAqC,MAArC,CAAP;EACD,CALD,MAKO;IACL,MAAM,OAAO,GAAG,IAAI,WAAJ,CAAgB,KAAhB,EAAuB,KAAvB,CAAhB;IACA,MAAM,YAAY,GAAG,CAAC,CAAC,KAAD,CAAD,CAArB;IACA,OAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,EAAjC,EAAqC,KAArC,EAA4C,YAA5C,CAAP;EACD;AACF;AAED,OAAO,MAAM,UAAU,GAAiB;EACtC,UAAU,EAAE,IAD0B;EAEtC,WAAW,EAAE,OAFyB;EAGtC,UAAU,EAAE;AAH0B,CAAjC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {Fill, FillAttrs, KernelConfig, KernelFunc, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {FillProgram} from '../fill_gpu';\n\nexport function fill(args: {backend: MathBackendWebGL, attrs: FillAttrs}):\n    TensorInfo {\n  const {backend, attrs} = args;\n  const {shape, value} = attrs;\n  let {dtype} = attrs;\n\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value as string);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    const program = new FillProgram(shape, value as number);\n    const customValues = [[value as number]];\n    return backend.runWebGLProgram(program, [], dtype, customValues);\n  }\n}\n\nexport const fillConfig: KernelConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}