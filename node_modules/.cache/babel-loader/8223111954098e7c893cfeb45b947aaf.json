{"ast":null,"code":"/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'HashTable',\n  'category': 'hash_table',\n  'inputs': [],\n  'attrs': [{\n    'tfName': 'shared_name',\n    'name': 'sharedName',\n    'type': 'string'\n  }, {\n    'tfName': 'use_node_name_sharing',\n    'name': 'useNodeNameSharing',\n    'type': 'bool'\n  }, {\n    'tfName': 'key_dtype',\n    'name': 'keyDType',\n    'type': 'dtype'\n  }, {\n    'tfName': 'value_dtype',\n    'name': 'valueDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'HashTableV2',\n  'category': 'hash_table',\n  'inputs': [],\n  'attrs': [{\n    'tfName': 'shared_name',\n    'name': 'sharedName',\n    'type': 'string'\n  }, {\n    'tfName': 'use_node_name_sharing',\n    'name': 'useNodeNameSharing',\n    'type': 'bool'\n  }, {\n    'tfName': 'key_dtype',\n    'name': 'keyDType',\n    'type': 'dtype'\n  }, {\n    'tfName': 'value_dtype',\n    'name': 'valueDType',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'LookupTableImport',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'keys',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'values',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'Tin',\n    'name': 'tIn',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'Tout',\n    'name': 'tOut',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LookupTableImportV2',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'keys',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'values',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'Tin',\n    'name': 'tIn',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'Tout',\n    'name': 'tOut',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LookupTableFind',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'keys',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'defaultValue',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'Tin',\n    'name': 'tIn',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'Tout',\n    'name': 'tOut',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LookupTableFindV2',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'keys',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'defaultValue',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'Tin',\n    'name': 'tIn',\n    'type': 'dtype',\n    'notSupported': true\n  }, {\n    'tfName': 'Tout',\n    'name': 'tOut',\n    'type': 'dtype',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'LookupTableSize',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'LookupTableSizeV2',\n  'category': 'hash_table',\n  'inputs': [{\n    'start': 0,\n    'name': 'tableHandle',\n    'type': 'tensor'\n  }]\n}];","map":{"version":3,"sources":["../../../../../../../tfjs-converter/src/operations/op_list/hash_table.ts"],"names":[],"mappings":"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","sourcesContent":["\n/**\n * @license\n * Copyright 2022 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {OpMapper} from '../types';\n\nexport const json: OpMapper[] = [\n  {\n    'tfOpName': 'HashTable',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {\n        'tfName': 'shared_name',\n        'name': 'sharedName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'key_dtype',\n        'name': 'keyDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'value_dtype',\n        'name': 'valueDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'HashTableV2',\n    'category': 'hash_table',\n    'inputs': [],\n    'attrs': [\n      {\n        'tfName': 'shared_name',\n        'name': 'sharedName',\n        'type': 'string'\n      },\n      {\n        'tfName': 'use_node_name_sharing',\n        'name': 'useNodeNameSharing',\n        'type': 'bool'\n      },\n      {\n        'tfName': 'key_dtype',\n        'name': 'keyDType',\n        'type': 'dtype'\n      },\n      {\n        'tfName': 'value_dtype',\n        'name': 'valueDType',\n        'type': 'dtype'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImport',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableImportV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'values',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFind',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableFindV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      },\n      {\n        'start': 1,\n        'name': 'keys',\n        'type': 'tensor'\n      },\n      {\n        'start': 2,\n        'name': 'defaultValue',\n        'type': 'tensor'\n      }\n    ],\n    'attrs': [\n      {\n        'tfName': 'Tin',\n        'name': 'tIn',\n        'type': 'dtype',\n        'notSupported': true\n      },\n      {\n        'tfName': 'Tout',\n        'name': 'tOut',\n        'type': 'dtype',\n        'notSupported': true\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSize',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      }\n    ]\n  },\n  {\n    'tfOpName': 'LookupTableSizeV2',\n    'category': 'hash_table',\n    'inputs': [\n      {\n        'start': 0,\n        'name': 'tableHandle',\n        'type': 'tensor'\n      }\n    ]\n  }\n];\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}