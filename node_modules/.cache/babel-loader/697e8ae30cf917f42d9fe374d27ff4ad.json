{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function maxImpl(x, reduceShape, outShape, backend) {\n  const inSize = util.sizeFromShape(reduceShape);\n  const xSize = util.sizeFromShape(x.shape);\n  const batchSize = xSize / inSize;\n  const reshapedInput = reshape({\n    inputs: {\n      x\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend\n  });\n  const reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n  const reshapedOutput = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n  return reshapedOutput;\n}","map":{"version":3,"sources":["../../../../../../tfjs-backend-webgl/src/kernels/Max_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAoB,IAApB,QAA+B,uBAA/B;AAGA,SAAQ,MAAR,QAAqB,wBAArB;AACA,SAAQ,OAAR,QAAsB,oBAAtB;AAEA,OAAM,SAAU,OAAV,CACF,CADE,EACa,WADb,EACoC,QADpC,EAEF,OAFE,EAEuB;EAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,WAAnB,CAAf;EACA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,KAArB,CAAd;EACA,MAAM,SAAS,GAAG,KAAK,GAAG,MAA1B;EACA,MAAM,aAAa,GACf,OAAO,CAAC;IAAC,MAAM,EAAE;MAAC;IAAD,CAAT;IAAc,KAAK,EAAE;MAAC,KAAK,EAAE,CAAC,SAAD,EAAY,MAAZ;IAAR,CAArB;IAAmD;EAAnD,CAAD,CADX;EAGA,MAAM,OAAO,GAAG,MAAM,CAAC,aAAD,EAAgB,CAAC,CAAC,KAAlB,EAAyB,KAAzB,EAAgC,OAAhC,CAAtB;EACA,MAAM,cAAc,GAChB,OAAO,CAAC;IAAC,MAAM,EAAE;MAAC,CAAC,EAAE;IAAJ,CAAT;IAAuB,KAAK,EAAE;MAAC,KAAK,EAAE;IAAR,CAA9B;IAAiD;EAAjD,CAAD,CADX;EAGA,OAAO,CAAC,6BAAR,CAAsC,aAAtC;EACA,OAAO,CAAC,6BAAR,CAAsC,OAAtC;EAEA,OAAO,cAAP;AACD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {reduce} from '../kernel_utils/reduce';\nimport {reshape} from '../kernels/Reshape';\n\nexport function maxImpl(\n    x: TensorInfo, reduceShape: number[], outShape: number[],\n    backend: MathBackendWebGL): TensorInfo {\n  const inSize = util.sizeFromShape(reduceShape);\n  const xSize = util.sizeFromShape(x.shape);\n  const batchSize = xSize / inSize;\n  const reshapedInput =\n      reshape({inputs: {x}, attrs: {shape: [batchSize, inSize]}, backend});\n\n  const reduced = reduce(reshapedInput, x.dtype, 'max', backend);\n  const reshapedOutput =\n      reshape({inputs: {x: reduced}, attrs: {shape: outShape}, backend});\n\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  return reshapedOutput;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}